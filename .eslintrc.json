{
    "env": {
        "es6": true,
        "browser": true,
        "es2021": true,
        "jest": true
    },
    "extends": [
        "standard"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 12,
        "sourceType": "module"
    },
    "plugins": [
        "@typescript-eslint"
    ],
    "rules": {
      "camelcase": "off",
      "@typescript-eslint/indent": "off", // This is the job of StandardJS, they are competing rules so we turn off the Typescript one. 
      "no-unused-vars": "off", // On the fence about using this one, sometimes we import a package that is never used directly. 
      "node/no-unsupported-features/es-syntax": "off", // Allows us to use Import and Export keywords.
      "@typescript-eslint/no-use-before-define": "off", // Allows us to hoist variables and functions which I am a fan of, functions not variables that is.
      "@typescript-eslint/no-explicit-any": "off", // Too strict for my case, sometimes I need an any type
      "@typescript-eslint/member-delimiter-style": ["error", 
        {
          "multiline": {
          "delimiter": "none",
          "requireLast": false
        },
        "singleline": {
          "delimiter": "comma",
          "requireLast": false
        }
      }], // Prevents us from using any delimiter for interface properties.
      "no-useless-constructor": "off",
      "class-methods-use-this": "off",
      "@typescript-eslint/no-unused-vars": ["off", {
        "argsIgnorePattern": "_"
      }],
      "import/extensions": [
        "error",
        "ignorePackages", {
          "ts": "never"
        }
      ]     
    },
    "settings": {
      "import/resolver": {
        "typescript": {}
      }
    }    
}